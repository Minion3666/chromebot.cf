{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\WebstormProjects\\\\chromebot.cf\\\\src\\\\index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Error from \"./pages/error.js\";\nimport Bots from \"./premade/bots.js\";\nimport HomePage from \"./premade/home.js\";\nimport Button from \"./utils/button.js\";\nimport ErrorBoundary from \"./utils/errorBoundaries.js\";\nlet buildNumber = 0.01;\nconsole.log(\"Welcome to the chromebot website. This is client build BR.\" + buildNumber + \".\");\n\nclass App extends Component {\n  render() {\n    return React.createElement(ErrorBoundary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/status\",\n      render: () => {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(Button, {\n          destructive: true,\n          onClick: button => window.location.href = \"https://chromebot.cf\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"Go Back Home\"), React.createElement(Bots, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/join\",\n      render: () => {\n        window.location.href = \"https://discordapp.com/invite/77NM8VQ\";\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"textblock\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"We're redirecting you now...\"), React.createElement(Button, {\n          important: true,\n          onClick: button => window.location.href = \"https://discordapp.com/invite/77NM8VQ\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \" \", \"Not Being Redirected ?\", \" \"));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Route, {\n      render: () => {\n        return React.createElement(Error, {\n          code: \"404\",\n          description: \"The requested resource was not found on the chromebot support website\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/Nathan/WebstormProjects/chromebot.cf/src/index.js"],"names":["React","Component","ReactDOM","BrowserRouter","Router","Route","Switch","Error","Bots","HomePage","Button","ErrorBoundary","buildNumber","console","log","App","render","button","window","location","href","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AAEA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,IAAIC,WAAW,GAAG,IAAlB;AAEAC,OAAO,CAACC,GAAR,CACE,+DACEF,WADF,GAEE,GAHJ;;AAMA,MAAMG,GAAN,SAAkBd,SAAlB,CAA4B;AAC1Be,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEP,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,MAAM,EAAE,MAAM;AACZ,eACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AACE,UAAA,WAAW,MADb;AAEE,UAAA,OAAO,EAAEQ,MAAM,IACZC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,sBAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EASE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATF,CADF;AAaD,OAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAoBE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,MAAM,EAAE,MAAM;AACZF,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,uCAAvB;AACA,eACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,EAIE,oBAAC,MAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,OAAO,EAAEH,MAAM,IACZC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GACC,uCAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOG,GAPH,4BAQyB,GARzB,CAJF,CADF;AAiBD,OArBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,EA2CE,oBAAC,KAAD;AACE,MAAA,MAAM,EAAE,MAAM;AACZ,eACE,oBAAC,KAAD;AACE,UAAA,IAAI,EAAC,KADP;AAEE,UAAA,WAAW,EAAC,uEAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,OARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CF,CADF,CADF,CADF;AA4DD;;AA9DyB;;AAkE5BlB,QAAQ,CAACc,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Error from \"./pages/error.js\";\r\nimport Bots from \"./premade/bots.js\";\r\nimport HomePage from \"./premade/home.js\";\r\nimport Button from \"./utils/button.js\";\r\nimport ErrorBoundary from \"./utils/errorBoundaries.js\";\r\n\r\nlet buildNumber = 0.01;\r\n\r\nconsole.log(\r\n  \"Welcome to the chromebot website. This is client build BR.\" +\r\n    buildNumber +\r\n    \".\"\r\n);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <ErrorBoundary>\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route\r\n              path=\"/status\"\r\n              render={() => {\r\n                return (\r\n                  <React.Fragment>\r\n                    <Button\r\n                      destructive\r\n                      onClick={button =>\r\n                        (window.location.href = \"https://chromebot.cf\")\r\n                      }\r\n                    >\r\n                      Go Back Home\r\n                    </Button>\r\n                    <Bots />\r\n                  </React.Fragment>\r\n                );\r\n              }}\r\n            />\r\n            <Route\r\n              path=\"/join\"\r\n              render={() => {\r\n                window.location.href = \"https://discordapp.com/invite/77NM8VQ\";\r\n                return (\r\n                  <React.Fragment>\r\n                    <div className=\"textblock\">\r\n                      We're redirecting you now...\r\n                    </div>\r\n                    <Button\r\n                      important\r\n                      onClick={button =>\r\n                        (window.location.href =\r\n                          \"https://discordapp.com/invite/77NM8VQ\")\r\n                      }\r\n                    >\r\n                      {\" \"}\r\n                      Not Being Redirected ?{\" \"}\r\n                    </Button>\r\n                  </React.Fragment>\r\n                );\r\n              }}\r\n            />\r\n            <Route\r\n              render={() => {\r\n                return (\r\n                  <Error\r\n                    code=\"404\"\r\n                    description=\"The requested resource was not found on the chromebot support website\"\r\n                  />\r\n                );\r\n              }}\r\n            />\r\n          </Switch>\r\n        </Router>\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"]},"metadata":{},"sourceType":"module"}