{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\WebstormProjects\\\\chromebot.cf\\\\src\\\\utils\\\\status.js\";\nimport React, { Component } from \"react\";\n\nclass Status extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: \"grey\",\n      message: \"getting the latest data\",\n      xmlhttp: new XMLHttpRequest(),\n      timeoutId: null\n    };\n  }\n\n  componentDidMount() {\n    this.state.xmlhttp.onreadystatechange = () => {\n      if (this.state.xmlhttp.readyState === 4 && this.state.xmlhttp.status === 200) {\n        let chromebotOn = false;\n        JSON.parse(this.state.xmlhttp.responseText).members.forEach(member => {\n          if (member.id === this.props.botId) {\n            chromebotOn = true;\n\n            if (member.status === \"idle\") {\n              this.setState({\n                color: \"#AF7E00\",\n                message: \"experiencing a Minor Outage\"\n              });\n            } else if (member.status === \"dnd\") {\n              this.setState({\n                color: \"#c65b29\",\n                message: \"experiencing a Major Outage\"\n              });\n            } else {\n              this.setState({\n                color: \"#6CB83A\",\n                message: \"operational\"\n              });\n            }\n          }\n        });\n\n        if (!chromebotOn) {\n          this.setState({\n            color: \"red\",\n            message: \"Offline\",\n            height: 9\n          });\n        }\n\n        setTimeout(() => {\n          this.state.xmlhttp.open(\"GET\", \"https://discordapp.com/api/guilds/\" + this.props.serverId + \"/widget.json?timestamp=\" + new Date().getTime(), true); //we appecnd the current timestamp to bypass caching, it's hacky but it works. Please don't remove it unless you have a better solution.\n\n          this.state.xmlhttp.send();\n        }, 5000);\n      }\n    };\n\n    this.state.xmlhttp.open(\"GET\", \"https://discordapp.com/api/guilds/\" + this.props.serverId + \"/widget.json?timestamp=\" + new Date().getTime(), true); //we append the current timestamp to bypass caching, it's hacky but it works. Please don't remove it unless you have a better solution.\n\n    this.state.xmlhttp.send();\n  }\n\n  componentWillUnmount() {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n    }\n\n    this.xmlhttp.abort();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"statusBox\",\n      style: {\n        backgroundColor: this.state.color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      className: \"title status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.props.botName, \" is currently\", \" \", React.createElement(\"span\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.message), \".\")));\n  }\n\n}\n\nexport default Status;","map":{"version":3,"sources":["C:/Users/Nathan/WebstormProjects/chromebot.cf/src/utils/status.js"],"names":["React","Component","Status","constructor","props","state","color","message","xmlhttp","XMLHttpRequest","timeoutId","componentDidMount","onreadystatechange","readyState","status","chromebotOn","JSON","parse","responseText","members","forEach","member","id","botId","setState","height","setTimeout","open","serverId","Date","getTime","send","componentWillUnmount","clearTimeout","abort","render","backgroundColor","botName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAC7BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,MADI;AAEXC,MAAAA,OAAO,EAAE,yBAFE;AAGXC,MAAAA,OAAO,EAAE,IAAIC,cAAJ,EAHE;AAIXC,MAAAA,SAAS,EAAE;AAJA,KAAb;AAMD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,KAAL,CAAWG,OAAX,CAAmBI,kBAAnB,GAAwC,MAAM;AAC5C,UACE,KAAKP,KAAL,CAAWG,OAAX,CAAmBK,UAAnB,KAAkC,CAAlC,IACA,KAAKR,KAAL,CAAWG,OAAX,CAAmBM,MAAnB,KAA8B,GAFhC,EAGE;AACA,YAAIC,WAAW,GAAG,KAAlB;AACAC,QAAAA,IAAI,CAACC,KAAL,CAAW,KAAKZ,KAAL,CAAWG,OAAX,CAAmBU,YAA9B,EAA4CC,OAA5C,CAAoDC,OAApD,CAA4DC,MAAM,IAAI;AACpE,cAAIA,MAAM,CAACC,EAAP,KAAc,KAAKlB,KAAL,CAAWmB,KAA7B,EAAoC;AAClCR,YAAAA,WAAW,GAAG,IAAd;;AACA,gBAAIM,MAAM,CAACP,MAAP,KAAkB,MAAtB,EAA8B;AAC5B,mBAAKU,QAAL,CAAc;AACZlB,gBAAAA,KAAK,EAAE,SADK;AAEZC,gBAAAA,OAAO,EAAE;AAFG,eAAd;AAID,aALD,MAKO,IAAIc,MAAM,CAACP,MAAP,KAAkB,KAAtB,EAA6B;AAClC,mBAAKU,QAAL,CAAc;AACZlB,gBAAAA,KAAK,EAAE,SADK;AAEZC,gBAAAA,OAAO,EAAE;AAFG,eAAd;AAID,aALM,MAKA;AACL,mBAAKiB,QAAL,CAAc;AACZlB,gBAAAA,KAAK,EAAE,SADK;AAEZC,gBAAAA,OAAO,EAAE;AAFG,eAAd;AAID;AACF;AACF,SApBD;;AAqBA,YAAI,CAACQ,WAAL,EAAkB;AAChB,eAAKS,QAAL,CAAc;AAAElB,YAAAA,KAAK,EAAE,KAAT;AAAgBC,YAAAA,OAAO,EAAE,SAAzB;AAAoCkB,YAAAA,MAAM,EAAE;AAA5C,WAAd;AACD;;AACDC,QAAAA,UAAU,CAAC,MAAM;AACf,eAAKrB,KAAL,CAAWG,OAAX,CAAmBmB,IAAnB,CACE,KADF,EAEE,uCACE,KAAKvB,KAAL,CAAWwB,QADb,GAEE,yBAFF,GAGE,IAAIC,IAAJ,GAAWC,OAAX,EALJ,EAME,IANF,EADe,CAQZ;;AACH,eAAKzB,KAAL,CAAWG,OAAX,CAAmBuB,IAAnB;AACD,SAVS,EAUP,IAVO,CAAV;AAWD;AACF,KA1CD;;AA2CA,SAAK1B,KAAL,CAAWG,OAAX,CAAmBmB,IAAnB,CACE,KADF,EAEE,uCACE,KAAKvB,KAAL,CAAWwB,QADb,GAEE,yBAFF,GAGE,IAAIC,IAAJ,GAAWC,OAAX,EALJ,EAME,IANF,EA5CkB,CAmDf;;AACH,SAAKzB,KAAL,CAAWG,OAAX,CAAmBuB,IAAnB;AACD;;AACDC,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKtB,SAAT,EAAoB;AAClBuB,MAAAA,YAAY,CAAC,KAAKvB,SAAN,CAAZ;AACD;;AACD,SAAKF,OAAL,CAAa0B,KAAb;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,eAAe,EAAE,KAAK/B,KAAL,CAAWC;AADvB,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,KAAL,CAAWiC,OADd,mBACoC,GADpC,EAEE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,KAAKhC,KAAL,CAAWE,OAAxC,CAFF,MANF,CADF,CADF;AAeD;;AAtF4B;;AAyF/B,eAAeL,MAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Status extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      color: \"grey\",\r\n      message: \"getting the latest data\",\r\n      xmlhttp: new XMLHttpRequest(),\r\n      timeoutId: null\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.state.xmlhttp.onreadystatechange = () => {\r\n      if (\r\n        this.state.xmlhttp.readyState === 4 &&\r\n        this.state.xmlhttp.status === 200\r\n      ) {\r\n        let chromebotOn = false;\r\n        JSON.parse(this.state.xmlhttp.responseText).members.forEach(member => {\r\n          if (member.id === this.props.botId) {\r\n            chromebotOn = true;\r\n            if (member.status === \"idle\") {\r\n              this.setState({\r\n                color: \"#AF7E00\",\r\n                message: \"experiencing a Minor Outage\"\r\n              });\r\n            } else if (member.status === \"dnd\") {\r\n              this.setState({\r\n                color: \"#c65b29\",\r\n                message: \"experiencing a Major Outage\"\r\n              });\r\n            } else {\r\n              this.setState({\r\n                color: \"#6CB83A\",\r\n                message: \"operational\"\r\n              });\r\n            }\r\n          }\r\n        });\r\n        if (!chromebotOn) {\r\n          this.setState({ color: \"red\", message: \"Offline\", height: 9 });\r\n        }\r\n        setTimeout(() => {\r\n          this.state.xmlhttp.open(\r\n            \"GET\",\r\n            \"https://discordapp.com/api/guilds/\" +\r\n              this.props.serverId +\r\n              \"/widget.json?timestamp=\" +\r\n              new Date().getTime(),\r\n            true\r\n          ); //we appecnd the current timestamp to bypass caching, it's hacky but it works. Please don't remove it unless you have a better solution.\r\n          this.state.xmlhttp.send();\r\n        }, 5000);\r\n      }\r\n    };\r\n    this.state.xmlhttp.open(\r\n      \"GET\",\r\n      \"https://discordapp.com/api/guilds/\" +\r\n        this.props.serverId +\r\n        \"/widget.json?timestamp=\" +\r\n        new Date().getTime(),\r\n      true\r\n    ); //we append the current timestamp to bypass caching, it's hacky but it works. Please don't remove it unless you have a better solution.\r\n    this.state.xmlhttp.send();\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.timeoutId) {\r\n      clearTimeout(this.timeoutId);\r\n    }\r\n    this.xmlhttp.abort();\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"statusBox\"\r\n          style={{\r\n            backgroundColor: this.state.color\r\n          }}\r\n        >\r\n          <b className=\"title status\">\r\n            {this.props.botName} is currently{\" \"}\r\n            <span className=\"highlight\">{this.state.message}</span>.\r\n          </b>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Status;\r\n"]},"metadata":{},"sourceType":"module"}