{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Nathan\\\\WebstormProjects\\\\chromebot.cf\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Nathan\\\\WebstormProjects\\\\chromebot.cf\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Nathan\\\\WebstormProjects\\\\chromebot.cf\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Nathan\\\\WebstormProjects\\\\chromebot.cf\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Nathan\\\\WebstormProjects\\\\chromebot.cf\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from\"react\";var StatusPage=/*#__PURE__*/function(_Component){_inherits(StatusPage,_Component);function StatusPage(props){var _this;_classCallCheck(this,StatusPage);_this=_possibleConstructorReturn(this,_getPrototypeOf(StatusPage).call(this,props));_this.state={color:\"#c23b3b\",barColor:\"grey\",percentage:100,message:\"Detecting the online bots...\",xmlhttp:new XMLHttpRequest()};_this.timeoutId=null;return _this;}_createClass(StatusPage,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.state.xmlhttp.onreadystatechange=function(){if(_this2.state.xmlhttp.readyState==4&&_this2.state.xmlhttp.status==200){var onlineMembers=0;JSON.parse(_this2.state.xmlhttp.responseText).members.forEach(function(member){if(_this2.props.searchForMembers.indexOf(member.id)>=0){onlineMembers++;}});var percentage=onlineMembers/_this2.props.searchForMembers.length*100;if(percentage==100){_this2.setState({percentage:percentage,barColor:\"#10690d\",color:\"#10690d\",message:percentage.toString()+\"% of the bot is online\"});}else{_this2.setState({percentage:percentage,barColor:\"#10690d\",color:\"#c23b3b\",message:percentage.toString()+\"% of the bots are online\"});}_this2.timeoutId=setTimeout(function(){_this2.state.xmlhttp.open(\"GET\",\"https://discordapp.com/api/guilds/\"+_this2.props.serverId+\"/widget.json?timestamp=\"+new Date().getTime(),true);//we appecnd the current timestamp to bypass caching, it's hacky but it works. Please don't remove it unless you have a better solution.\n_this2.state.xmlhttp.send();},5000);}};this.state.xmlhttp.open(\"GET\",\"https://discordapp.com/api/guilds/\"+this.props.serverId+\"/widget.json?timestamp=\"+new Date().getTime(),true);//we append the current timestamp to bypass caching, it's hacky but it works. Please don't remove it unless you have a better solution.\nthis.state.xmlhttp.send();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){if(this.timeoutId){clearTimeout(this.timeoutId);}this.state.xmlhttp.abort();}},{key:\"render\",value:function render(){return React.createElement(React.Fragment,null,React.createElement(\"div\",{id:\"percentbarOuter\",style:{backgroundColor:this.state.color}},React.createElement(\"div\",{id:\"percentbarInnerText\"},this.state.message),React.createElement(\"div\",{id:\"percentbarInner\",style:{width:this.state.percentage.toString()+\"%\",backgroundColor:this.state.barColor}})));}}]);return StatusPage;}(Component);export default StatusPage;","map":{"version":3,"sources":["C:/Users/Nathan/WebstormProjects/chromebot.cf/src/utils/percentBar.js"],"names":["React","Component","StatusPage","props","state","color","barColor","percentage","message","xmlhttp","XMLHttpRequest","timeoutId","onreadystatechange","readyState","status","onlineMembers","JSON","parse","responseText","members","forEach","member","searchForMembers","indexOf","id","length","setState","toString","setTimeout","open","serverId","Date","getTime","send","clearTimeout","abort","backgroundColor","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass StatusPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      color: \"#c23b3b\",\r\n      barColor: \"grey\",\r\n      percentage: 100,\r\n      message: \"Detecting the online bots...\",\r\n      xmlhttp: new XMLHttpRequest()\r\n    };\r\n    this.timeoutId = null;\r\n  }\r\n  componentDidMount() {\r\n    this.state.xmlhttp.onreadystatechange = () => {\r\n      if (\r\n        this.state.xmlhttp.readyState == 4 &&\r\n        this.state.xmlhttp.status == 200\r\n      ) {\r\n        let onlineMembers = 0;\r\n        JSON.parse(this.state.xmlhttp.responseText).members.forEach(member => {\r\n          if (this.props.searchForMembers.indexOf(member.id) >= 0) {\r\n            onlineMembers++;\r\n          }\r\n        });\r\n        let percentage =\r\n          (onlineMembers / this.props.searchForMembers.length) * 100;\r\n        if (percentage == 100) {\r\n          this.setState({\r\n            percentage: percentage,\r\n            barColor: \"#10690d\",\r\n            color: \"#10690d\",\r\n            message: percentage.toString() + \"% of the bot is online\"\r\n          });\r\n        } else {\r\n          this.setState({\r\n            percentage: percentage,\r\n            barColor: \"#10690d\",\r\n            color: \"#c23b3b\",\r\n            message: percentage.toString() + \"% of the bots are online\"\r\n          });\r\n        }\r\n        this.timeoutId = setTimeout(() => {\r\n          this.state.xmlhttp.open(\r\n            \"GET\",\r\n            \"https://discordapp.com/api/guilds/\" +\r\n              this.props.serverId +\r\n              \"/widget.json?timestamp=\" +\r\n              new Date().getTime(),\r\n            true\r\n          ); //we appecnd the current timestamp to bypass caching, it's hacky but it works. Please don't remove it unless you have a better solution.\r\n          this.state.xmlhttp.send();\r\n        }, 5000);\r\n      }\r\n    };\r\n    this.state.xmlhttp.open(\r\n      \"GET\",\r\n      \"https://discordapp.com/api/guilds/\" +\r\n        this.props.serverId +\r\n        \"/widget.json?timestamp=\" +\r\n        new Date().getTime(),\r\n      true\r\n    ); //we append the current timestamp to bypass caching, it's hacky but it works. Please don't remove it unless you have a better solution.\r\n    this.state.xmlhttp.send();\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.timeoutId) {\r\n      clearTimeout(this.timeoutId);\r\n    }\r\n    this.state.xmlhttp.abort();\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div id=\"percentbarOuter\" style={{ backgroundColor: this.state.color }}>\r\n          <div id=\"percentbarInnerText\">{this.state.message}</div>\r\n          <div\r\n            id=\"percentbarInner\"\r\n            style={{\r\n              width: this.state.percentage.toString() + \"%\",\r\n              backgroundColor: this.state.barColor\r\n            }}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StatusPage;\r\n"]},"metadata":{},"sourceType":"module"}