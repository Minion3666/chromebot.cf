{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\WebstormProjects\\\\chromebot.cf\\\\src\\\\utils\\\\navbar.js\";\nimport React, { Component } from \"react\";\nimport Button from \"./button.js\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logo: null,\n      sticky: null,\n      allowStick: false\n    };\n  }\n\n  stick() {\n    console.log(window.pageYOffset);\n\n    if (window.pageYOffset >= this.state.sticky) {\n      if (!this.state.allowStick) {\n        return;\n      }\n\n      this.state.logo.parentElement.childNodes.forEach(child => {\n        child.classList.add(\"sticky\");\n      });\n      Array.from(document.getElementsByClassName(\"link\")).forEach(child => {\n        child.classList.add(\"sticky\");\n      });\n      document.body.classList.add(\"sticky\");\n      this.state.logo.parentElement.classList.add(\"stickyContainer\");\n    } else {\n      if (!this.state.allowUnStick) {\n        return;\n      }\n\n      this.state.logo.parentElement.childNodes.forEach(child => {\n        child.classList.remove(\"sticky\");\n      });\n      Array.from(document.getElementsByClassName(\"link\")).forEach(child => {\n        child.classList.remove(\"sticky\");\n      });\n      document.body.classList.remove(\"sticky\");\n      this.state.logo.parentElement.classList.remove(\"stickyContainer\");\n    }\n  }\n\n  componentDidUpdate() {\n    this.stick();\n  }\n\n  componentDidMount() {\n    this.setState({\n      logo: document.getElementById(\"logo\"),\n      sticky: document.getElementById(\"logo\").offsetTop,\n      allowStick: true,\n      allowUnStick: true\n    });\n\n    window.onscroll = () => {\n      this.stick();\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      className: \"logo\",\n      id: \"logo\",\n      autoPlay: true,\n      loop: true,\n      muted: true,\n      playsInline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: \"videos/icon-rotate.webm\",\n      type: \"video/webm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"source\", {\n      src: \"videos/icon-rotate.mp4\",\n      type: \"video/mp4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(Button, {\n      important: true,\n      onClick: button => {\n        window.location.href = \"https://discordapp.com/invite/77NM8VQ\";\n        button.unpress();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Join The Server\"), React.createElement(Button, {\n      onClick: button => {\n        window.location.href = \"#bot-invite\";\n        button.unpress();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Invite The Bots\")));\n  }\n\n}\n\nexport default Navbar;","map":{"version":3,"sources":["C:/Users/Nathan/WebstormProjects/chromebot.cf/src/utils/navbar.js"],"names":["React","Component","Button","Navbar","constructor","props","state","logo","sticky","allowStick","stick","console","log","window","pageYOffset","parentElement","childNodes","forEach","child","classList","add","Array","from","document","getElementsByClassName","body","allowUnStick","remove","componentDidUpdate","componentDidMount","setState","getElementById","offsetTop","onscroll","render","button","location","href","unpress"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Button from \"./button.js\";\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      logo: null,\r\n      sticky: null,\r\n      allowStick: false\r\n    };\r\n  }\r\n  stick() {\r\n    console.log(window.pageYOffset);\r\n    if (window.pageYOffset >= this.state.sticky) {\r\n      if (!this.state.allowStick) {\r\n        return;\r\n      }\r\n      this.state.logo.parentElement.childNodes.forEach(child => {\r\n        child.classList.add(\"sticky\");\r\n      });\r\n      Array.from(document.getElementsByClassName(\"link\")).forEach(child => {\r\n        child.classList.add(\"sticky\");\r\n      });\r\n      document.body.classList.add(\"sticky\");\r\n      this.state.logo.parentElement.classList.add(\"stickyContainer\");\r\n    } else {\r\n      if (!this.state.allowUnStick) {\r\n        return;\r\n      }\r\n      this.state.logo.parentElement.childNodes.forEach(child => {\r\n        child.classList.remove(\"sticky\");\r\n      });\r\n      Array.from(document.getElementsByClassName(\"link\")).forEach(child => {\r\n        child.classList.remove(\"sticky\");\r\n      });\r\n      document.body.classList.remove(\"sticky\");\r\n      this.state.logo.parentElement.classList.remove(\"stickyContainer\");\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n    this.stick();\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      logo: document.getElementById(\"logo\"),\r\n      sticky: document.getElementById(\"logo\").offsetTop,\r\n      allowStick: true,\r\n      allowUnStick: true,\r\n    });\r\n    window.onscroll = () => {\r\n      this.stick();\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <video className=\"logo\"\r\n                 id=\"logo\"\r\n                 autoPlay\r\n                 loop\r\n                 muted\r\n                 playsInline>\r\n            <source src=\"videos/icon-rotate.webm\" type=\"video/webm\"/>\r\n            <source src=\"videos/icon-rotate.mp4\" type=\"video/mp4\"/>\r\n          </video>\r\n          <Button\r\n            important\r\n            onClick={button => {\r\n              window.location.href = \"https://discordapp.com/invite/77NM8VQ\";\r\n              button.unpress();\r\n            }}\r\n          >\r\n            Join The Server\r\n          </Button>\r\n          <Button\r\n            onClick={button => {\r\n              window.location.href = \"#bot-invite\";\r\n              button.unpress();\r\n            }}\r\n          >\r\n            Invite The Bots\r\n          </Button>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}