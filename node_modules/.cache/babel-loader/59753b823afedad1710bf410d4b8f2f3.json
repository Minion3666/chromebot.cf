{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\WebstormProjects\\\\chromebot.cf\\\\src\\\\utils\\\\percentBar.js\";\nimport React, { Component } from \"react\";\n\nclass StatusPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: \"#c23b3b\",\n      barColor: \"grey\",\n      percentage: 100,\n      message: \"Detecting the online bots...\",\n      xmlhttp: new XMLHttpRequest()\n    };\n    this.timeoutId = null;\n  }\n\n  componentDidMount() {\n    this.state.xmlhttp.onreadystatechange = () => {\n      if (this.state.xmlhttp.readyState == 4 && this.state.xmlhttp.status == 200) {\n        let onlineMembers = 0;\n        JSON.parse(this.state.xmlhttp.responseText).members.forEach(member => {\n          if (this.props.searchForMembers.indexOf(member.id) >= 0) {\n            onlineMembers++;\n          }\n        });\n        let percentage = onlineMembers / this.props.searchForMembers.length * 100;\n\n        if (percentage == 100) {\n          this.setState({\n            percentage: percentage,\n            barColor: \"#6cb83a\",\n            color: \"#6cb83a\",\n            message: percentage.toString() + \"% of the bot is online\"\n          });\n        } else {\n          this.setState({\n            percentage: percentage,\n            barColor: \"#6cb83a\",\n            color: \"#c23b3b\",\n            message: percentage.toString() + \"% of the bots are online\"\n          });\n        }\n\n        this.timeoutId = setTimeout(() => {\n          this.state.xmlhttp.open(\"GET\", \"https://discordapp.com/api/guilds/\" + this.props.serverId + \"/widget.json?timestamp=\" + new Date().getTime(), true); //we appecnd the current timestamp to bypass caching, it's hacky but it works. Please don't remove it unless you have a better solution.\n\n          this.state.xmlhttp.send();\n        }, 5000);\n      }\n    };\n\n    this.state.xmlhttp.open(\"GET\", \"https://discordapp.com/api/guilds/\" + this.props.serverId + \"/widget.json?timestamp=\" + new Date().getTime(), true); //we append the current timestamp to bypass caching, it's hacky but it works. Please don't remove it unless you have a better solution.\n\n    this.state.xmlhttp.send();\n  }\n\n  componentWillUnmount() {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n    }\n\n    this.state.xmlhttp.abort();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"percentbarOuter\",\n      style: {\n        backgroundColor: this.state.color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"percentbarInnerText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.message), React.createElement(\"div\", {\n      id: \"percentbarInner\",\n      style: {\n        width: this.state.percentage.toString() + \"%\",\n        backgroundColor: this.state.barColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default StatusPage;","map":{"version":3,"sources":["C:/Users/Nathan/WebstormProjects/chromebot.cf/src/utils/percentBar.js"],"names":["React","Component","StatusPage","constructor","props","state","color","barColor","percentage","message","xmlhttp","XMLHttpRequest","timeoutId","componentDidMount","onreadystatechange","readyState","status","onlineMembers","JSON","parse","responseText","members","forEach","member","searchForMembers","indexOf","id","length","setState","toString","setTimeout","open","serverId","Date","getTime","send","componentWillUnmount","clearTimeout","abort","render","backgroundColor","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass StatusPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      color: \"#c23b3b\",\r\n      barColor: \"grey\",\r\n      percentage: 100,\r\n      message: \"Detecting the online bots...\",\r\n      xmlhttp: new XMLHttpRequest()\r\n    };\r\n    this.timeoutId = null;\r\n  }\r\n  componentDidMount() {\r\n    this.state.xmlhttp.onreadystatechange = () => {\r\n      if (\r\n        this.state.xmlhttp.readyState == 4 &&\r\n        this.state.xmlhttp.status == 200\r\n      ) {\r\n        let onlineMembers = 0;\r\n        JSON.parse(this.state.xmlhttp.responseText).members.forEach(member => {\r\n          if (this.props.searchForMembers.indexOf(member.id) >= 0) {\r\n            onlineMembers++;\r\n          }\r\n        });\r\n        let percentage =\r\n          (onlineMembers / this.props.searchForMembers.length) * 100;\r\n        if (percentage == 100) {\r\n          this.setState({\r\n            percentage: percentage,\r\n            barColor: \"#6cb83a\",\r\n            color: \"#6cb83a\",\r\n            message: percentage.toString() + \"% of the bot is online\"\r\n          });\r\n        } else {\r\n          this.setState({\r\n            percentage: percentage,\r\n            barColor: \"#6cb83a\",\r\n            color: \"#c23b3b\",\r\n            message: percentage.toString() + \"% of the bots are online\"\r\n          });\r\n        }\r\n        this.timeoutId = setTimeout(() => {\r\n          this.state.xmlhttp.open(\r\n            \"GET\",\r\n            \"https://discordapp.com/api/guilds/\" +\r\n              this.props.serverId +\r\n              \"/widget.json?timestamp=\" +\r\n              new Date().getTime(),\r\n            true\r\n          ); //we appecnd the current timestamp to bypass caching, it's hacky but it works. Please don't remove it unless you have a better solution.\r\n          this.state.xmlhttp.send();\r\n        }, 5000);\r\n      }\r\n    };\r\n    this.state.xmlhttp.open(\r\n      \"GET\",\r\n      \"https://discordapp.com/api/guilds/\" +\r\n        this.props.serverId +\r\n        \"/widget.json?timestamp=\" +\r\n        new Date().getTime(),\r\n      true\r\n    ); //we append the current timestamp to bypass caching, it's hacky but it works. Please don't remove it unless you have a better solution.\r\n    this.state.xmlhttp.send();\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.timeoutId) {\r\n      clearTimeout(this.timeoutId);\r\n    }\r\n    this.state.xmlhttp.abort();\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div id=\"percentbarOuter\" style={{ backgroundColor: this.state.color }}>\r\n          <div id=\"percentbarInnerText\">{this.state.message}</div>\r\n          <div\r\n            id=\"percentbarInner\"\r\n            style={{\r\n              width: this.state.percentage.toString() + \"%\",\r\n              backgroundColor: this.state.barColor\r\n            }}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StatusPage;\r\n"]},"metadata":{},"sourceType":"module"}