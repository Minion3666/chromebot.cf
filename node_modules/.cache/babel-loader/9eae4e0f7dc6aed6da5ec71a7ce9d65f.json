{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\WebstormProjects\\\\chromebot.cf\\\\src\\\\index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Error from \"./pages/error.js\";\nimport Bots from \"./premade/bots.js\";\nimport HomePage from \"./premade/home.js\";\nimport Button from \"./utils/button.js\";\nimport ErrorBoundary from \"./utils/errorBoundaries.js\";\nlet buildNumber = 0.01;\nconsole.log(\"Welcome to the chromebot website. This is client build BR.\" + buildNumber + \".\");\n\nclass App extends Component {\n  render() {\n    return React.createElement(ErrorBoundary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/status\",\n      render: () => {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(Button, {\n          destructive: true,\n          onClick: button => window.location.href = \"https://chromebot.cf\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"Go Back Home\"), React.createElement(Bots, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/join\",\n      render: () => {\n        window.location.href = \"https://discordapp.com/invite/77NM8VQ\";\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"textblock\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"We're redirecting you now...\"), React.createElement(Button, {\n          important: true,\n          onClick: button => window.location.href = \"https://discordapp.com/invite/77NM8VQ\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \" \", \"Not Being Redirected ?\", \" \"));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Route, {\n      render: () => {\n        return React.createElement(Error, {\n          code: \"404\",\n          description: \"The requested resource was not found on the chromebot support website\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nclass OnlineOffline extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      vinceOn: \"checking\"\n    };\n  }\n\n  componentDidMount() {\n    let discordWidget = new XMLHttpRequest();\n\n    discordWidget.onreadystatechange = () => {\n      if (discordWidget.readyState == 4 && discordWidget.status == 200) {\n        let vinceOn = false;\n        JSON.parse(discordWidget.responseText).members.forEach(member => {\n          if (member.id == 317731855317336067) {\n            vinceOn = true;\n          }\n        });\n        this.setState({\n          vinceOn: vinceOn\n        });\n      }\n    };\n\n    discordWidget.open(\"GET\", \"https://discordapp.com/api/guilds/480959345601937410/widget.json?timestamp=\" + new Date().getTime(), true); // we append the current timestamp to bypass caching, it's hacky\n    // but it works. Please don't remove it unless you have a better\n    // solution.\n\n    discordWidget.send();\n  }\n\n  render() {\n    if (this.state.vinceOn === \"checking\") {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Getting the latest data...\");\n    } else if (this.state.vinceOn) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Minion is ONLINE \\uD83C\\uDF89\");\n    } else {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Minion is OFFLINE \\u274C\");\n    }\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/Nathan/WebstormProjects/chromebot.cf/src/index.js"],"names":["React","Component","ReactDOM","BrowserRouter","Router","Route","Switch","Error","Bots","HomePage","Button","ErrorBoundary","buildNumber","console","log","App","render","button","window","location","href","OnlineOffline","constructor","props","state","vinceOn","componentDidMount","discordWidget","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","members","forEach","member","id","setState","open","Date","getTime","send","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Error from \"./pages/error.js\";\r\nimport Bots from \"./premade/bots.js\";\r\nimport HomePage from \"./premade/home.js\";\r\nimport Button from \"./utils/button.js\";\r\nimport ErrorBoundary from \"./utils/errorBoundaries.js\";\r\n\r\nlet buildNumber = 0.01;\r\n\r\nconsole.log(\r\n  \"Welcome to the chromebot website. This is client build BR.\" +\r\n    buildNumber +\r\n    \".\"\r\n);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <ErrorBoundary>\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route\r\n              path=\"/status\"\r\n              render={() => {\r\n                return (\r\n                  <React.Fragment>\r\n                    <Button\r\n                      destructive\r\n                      onClick={button =>\r\n                        (window.location.href = \"https://chromebot.cf\")\r\n                      }\r\n                    >\r\n                      Go Back Home\r\n                    </Button>\r\n                    <Bots />\r\n                  </React.Fragment>\r\n                );\r\n              }}\r\n            />\r\n            <Route\r\n              path=\"/join\"\r\n              render={() => {\r\n                window.location.href = \"https://discordapp.com/invite/77NM8VQ\";\r\n                return (\r\n                  <React.Fragment>\r\n                    <div className=\"textblock\">\r\n                      We're redirecting you now...\r\n                    </div>\r\n                    <Button\r\n                      important\r\n                      onClick={button =>\r\n                        (window.location.href =\r\n                          \"https://discordapp.com/invite/77NM8VQ\")\r\n                      }\r\n                    >\r\n                      {\" \"}\r\n                      Not Being Redirected ?{\" \"}\r\n                    </Button>\r\n                  </React.Fragment>\r\n                );\r\n              }}\r\n            />\r\n            <Route\r\n              render={() => {\r\n                return (\r\n                  <Error\r\n                    code=\"404\"\r\n                    description=\"The requested resource was not found on the chromebot support website\"\r\n                  />\r\n                );\r\n              }}\r\n            />\r\n          </Switch>\r\n        </Router>\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n}\r\n\r\nclass OnlineOffline extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { vinceOn: \"checking\" };\r\n  }\r\n  componentDidMount() {\r\n    let discordWidget = new XMLHttpRequest();\r\n    discordWidget.onreadystatechange = () => {\r\n      if (discordWidget.readyState == 4 && discordWidget.status == 200) {\r\n        let vinceOn = false;\r\n        JSON.parse(discordWidget.responseText).members.forEach(member => {\r\n          if (member.id == 317731855317336067) {\r\n            vinceOn = true;\r\n          }\r\n        });\r\n        this.setState({ vinceOn: vinceOn });\r\n      }\r\n    };\r\n    discordWidget.open(\r\n      \"GET\",\r\n      \"https://discordapp.com/api/guilds/480959345601937410/widget.json?timestamp=\" +\r\n        new Date().getTime(),\r\n      true\r\n    ); // we append the current timestamp to bypass caching, it's hacky\r\n    // but it works. Please don't remove it unless you have a better\r\n    // solution.\r\n    discordWidget.send();\r\n  }\r\n  render() {\r\n    if (this.state.vinceOn === \"checking\") {\r\n      return <h1>Getting the latest data...</h1>;\r\n    } else if (this.state.vinceOn) {\r\n      return <h1>Minion is ONLINE 🎉</h1>;\r\n    } else {\r\n      return <h1>Minion is OFFLINE ❌</h1>;\r\n    }\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"]},"metadata":{},"sourceType":"module"}