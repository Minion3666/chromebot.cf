{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\WebstormProjects\\\\chromebot.cf\\\\src\\\\utils\\\\button.js\";\nimport React, { Component } from 'react';\n\nclass Button extends Component {\n  constructor(props) {\n    super(props);\n    let disabled = false;\n    let type = \"\";\n    let onClick = this.unpress;\n\n    if (props.disabled) {\n      disabled = true;\n    }\n\n    if (props.destructive) {\n      type = \"destructive\";\n    } else if (props.important) {\n      type = \"important\";\n    }\n\n    if (typeof props.onClick === \"function\") {\n      onClick = props.onClick;\n    }\n\n    this.state = {\n      pressed: false,\n      disabled: disabled,\n      type: type,\n      onClick: onClick\n    };\n  }\n\n  unpress() {\n    this.setState({\n      pressed: false\n    });\n  }\n\n  render() {\n    if (this.state.disabled) {\n      return React.createElement(\"button\", {\n        className: \"button disabled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, this.props.children);\n    } else if (!this.state.pressed) {\n      return React.createElement(\"button\", {\n        onClick: () => {\n          this.setState({\n            pressed: true\n          });\n          this.state.onClick(this);\n        },\n        className: \"button \" + this.state.type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, this.props.children);\n    } else {\n      return React.createElement(\"button\", {\n        className: \"button pressed \" + this.state.type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.props.children);\n    }\n  }\n\n}\n\nexport default Button;","map":{"version":3,"sources":["C:/Users/Nathan/WebstormProjects/chromebot.cf/src/utils/button.js"],"names":["React","Component","Button","constructor","props","disabled","type","onClick","unpress","destructive","important","state","pressed","setState","render","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAC9BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,QAAIC,QAAQ,GAAG,KAAf;AACA,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,OAAO,GAAG,KAAKC,OAAnB;;AACA,QAAIJ,KAAK,CAACC,QAAV,EAAoB;AACnBA,MAAAA,QAAQ,GAAG,IAAX;AACA;;AACD,QAAID,KAAK,CAACK,WAAV,EAAuB;AACtBH,MAAAA,IAAI,GAAG,aAAP;AACA,KAFD,MAEO,IAAIF,KAAK,CAACM,SAAV,EAAqB;AAC3BJ,MAAAA,IAAI,GAAG,WAAP;AACA;;AACD,QAAI,OAAOF,KAAK,CAACG,OAAb,KAAyB,UAA7B,EAAyC;AACxCA,MAAAA,OAAO,GAAGH,KAAK,CAACG,OAAhB;AACA;;AACD,SAAKI,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkBP,MAAAA,QAAQ,EAAEA,QAA5B;AAAsCC,MAAAA,IAAI,EAAEA,IAA5C;AAAkDC,MAAAA,OAAO,EAAEA;AAA3D,KAAb;AACA;;AACDC,EAAAA,OAAO,GAAG;AACT,SAAKK,QAAL,CAAc;AAACD,MAAAA,OAAO,EAAE;AAAV,KAAd;AACA;;AACDE,EAAAA,MAAM,GAAG;AACR,QAAI,KAAKH,KAAL,CAAWN,QAAf,EAAyB;AACxB,aACC;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqC,KAAKD,KAAL,CAAWW,QAAhD,CADD;AAGA,KAJD,MAIO,IAAI,CAAC,KAAKJ,KAAL,CAAWC,OAAhB,EAAyB;AAC/B,aACC;AAAQ,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKC,QAAL,CAAc;AAAED,YAAAA,OAAO,EAAE;AAAX,WAAd;AAAkC,eAAKD,KAAL,CAAWJ,OAAX,CAAmB,IAAnB;AAA2B,SAAtF;AAAwF,QAAA,SAAS,EAAE,YAAY,KAAKI,KAAL,CAAWL,IAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiI,KAAKF,KAAL,CAAWW,QAA5I,CADD;AAGA,KAJM,MAIA;AACN,aACC;AAAQ,QAAA,SAAS,EAAE,oBAAoB,KAAKJ,KAAL,CAAWL,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyD,KAAKF,KAAL,CAAWW,QAApE,CADD;AAGA;AACD;;AApC6B;;AAuC/B,eAAeb,MAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Button extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tlet disabled = false;\r\n\t\tlet type = \"\";\r\n\t\tlet onClick = this.unpress;\r\n\t\tif (props.disabled) {\r\n\t\t\tdisabled = true;\r\n\t\t}\r\n\t\tif (props.destructive) {\r\n\t\t\ttype = \"destructive\";\r\n\t\t} else if (props.important) {\r\n\t\t\ttype = \"important\";\r\n\t\t}\r\n\t\tif (typeof props.onClick === \"function\") {\r\n\t\t\tonClick = props.onClick;\r\n\t\t}\r\n\t\tthis.state = { pressed: false, disabled: disabled, type: type, onClick: onClick };\r\n\t}\r\n\tunpress() {\r\n\t\tthis.setState({pressed: false});\r\n\t}\r\n\trender() {\r\n\t\tif (this.state.disabled) {\r\n\t\t\treturn (\r\n\t\t\t\t<button className=\"button disabled\">{this.props.children}</button>\r\n\t\t\t);\r\n\t\t} else if (!this.state.pressed) {\r\n\t\t\treturn (\r\n\t\t\t\t<button onClick={() => { this.setState({ pressed: true }); this.state.onClick(this); }} className={\"button \" + this.state.type}>{this.props.children}</button>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<button className={\"button pressed \" + this.state.type}>{this.props.children}</button>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Button;\r\n"]},"metadata":{},"sourceType":"module"}